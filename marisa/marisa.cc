/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: marisa_swig.swigcxx_

#define SWIGMODULE marisa

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


#define SWIG_exception(code, msg) _swig_gopanic(msg)


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include <typeinfo>
#include <stdexcept>


#include <string>


#include <vector>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <utility>


#include <stdio.h>
#include <string.h>
#include <errno.h>
#include "marisa_swig.h"

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_marisa_2116d121546c47ae(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_marisa_2116d121546c47ae(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


intgo _wrap_OK_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::OK;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STATE_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::STATE_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NULL_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::NULL_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BOUND_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::BOUND_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RANGE_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::RANGE_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CODE_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::CODE_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RESET_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::RESET_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SIZE_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::SIZE_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MEMORY_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::MEMORY_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IO_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::IO_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FORMAT_ERROR_marisa_2116d121546c47ae() {
  marisa_swig::ErrorCode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::FORMAT_ERROR;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MIN_NUM_TRIES_marisa_2116d121546c47ae() {
  marisa_swig::NumTries result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::MIN_NUM_TRIES;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAX_NUM_TRIES_marisa_2116d121546c47ae() {
  marisa_swig::NumTries result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::MAX_NUM_TRIES;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEFAULT_NUM_TRIES_marisa_2116d121546c47ae() {
  marisa_swig::NumTries result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::DEFAULT_NUM_TRIES;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HUGE_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::HUGE_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_LARGE_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::LARGE_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORMAL_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::NORMAL_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SMALL_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::SMALL_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TINY_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::TINY_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEFAULT_CACHE_marisa_2116d121546c47ae() {
  marisa_swig::CacheLevel result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::DEFAULT_CACHE;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TEXT_TAIL_marisa_2116d121546c47ae() {
  marisa_swig::TailMode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::TEXT_TAIL;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BINARY_TAIL_marisa_2116d121546c47ae() {
  marisa_swig::TailMode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::BINARY_TAIL;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEFAULT_TAIL_marisa_2116d121546c47ae() {
  marisa_swig::TailMode result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::DEFAULT_TAIL;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_LABEL_ORDER_marisa_2116d121546c47ae() {
  marisa_swig::NodeOrder result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::LABEL_ORDER;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WEIGHT_ORDER_marisa_2116d121546c47ae() {
  marisa_swig::NodeOrder result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::WEIGHT_ORDER;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEFAULT_ORDER_marisa_2116d121546c47ae() {
  marisa_swig::NodeOrder result;
  intgo _swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = marisa_swig::DEFAULT_ORDER;
      ;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


_gostring_ _wrap_Key_str_marisa_2116d121546c47ae(marisa_swig::Key *_swig_go_0) {
  marisa_swig::Key *arg1 = (marisa_swig::Key *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(marisa_swig::Key **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (arg1)->str();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


long long _wrap_Key_id_marisa_2116d121546c47ae(marisa_swig::Key *_swig_go_0) {
  marisa_swig::Key *arg1 = (marisa_swig::Key *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Key **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Key const *)arg1)->id();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_Key_weight_marisa_2116d121546c47ae(marisa_swig::Key *_swig_go_0) {
  marisa_swig::Key *arg1 = (marisa_swig::Key *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(marisa_swig::Key **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (float)((marisa_swig::Key const *)arg1)->weight();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Key_marisa_2116d121546c47ae(marisa_swig::Key *_swig_go_0) {
  marisa_swig::Key *arg1 = (marisa_swig::Key *) 0 ;
  
  arg1 = *(marisa_swig::Key **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      delete arg1;;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Query_str_marisa_2116d121546c47ae(marisa_swig::Query *_swig_go_0, _gostring_* _swig_go_1, long long *_swig_go_2) {
  marisa_swig::Query *arg1 = (marisa_swig::Query *) 0 ;
  char **arg2 = (char **) 0 ;
  std::size_t *arg3 = (std::size_t *) 0 ;
  
  arg1 = *(marisa_swig::Query **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  arg3 = *(std::size_t **)&_swig_go_2; 
  
  {
    try {
      errno = 0;
      ((marisa_swig::Query const *)arg1)->str((char const **)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


long long _wrap_Query_id_marisa_2116d121546c47ae(marisa_swig::Query *_swig_go_0) {
  marisa_swig::Query *arg1 = (marisa_swig::Query *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Query **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Query const *)arg1)->id();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Query_marisa_2116d121546c47ae(marisa_swig::Query *_swig_go_0) {
  marisa_swig::Query *arg1 = (marisa_swig::Query *) 0 ;
  
  arg1 = *(marisa_swig::Query **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      delete arg1;;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


marisa_swig::Keyset *_wrap_new_Keyset_marisa_2116d121546c47ae() {
  marisa_swig::Keyset *result = 0 ;
  marisa_swig::Keyset *_swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Keyset *)new marisa_swig::Keyset();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Keyset **)&_swig_go_result = (marisa_swig::Keyset *)result; 
  return _swig_go_result;
}


void _wrap_delete_Keyset_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      delete arg1;;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Keyset_pushBack_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, marisa::Key *_swig_go_1) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  marisa::Key *arg2 = 0 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  arg2 = *(marisa::Key **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      (arg1)->pushBack((marisa::Key const &)*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Keyset_pushBackStringWithWeight_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  float arg4 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  arg4 = (float)_swig_go_2; 
  
  {
    try {
      errno = 0;
      (arg1)->pushBack((char const *)arg2,arg3,arg4);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Keyset_pushBackString_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, _gostring_ _swig_go_1) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  
  {
    try {
      errno = 0;
      (arg1)->pushBack((char const *)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


marisa_swig::Key *_wrap_Keyset_key_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, long long _swig_go_1) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t arg2 ;
  marisa_swig::Key *result = 0 ;
  marisa_swig::Key *_swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Key *) &((marisa_swig::Keyset const *)arg1)->key(arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Key **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Keyset_keyStr_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, long long _swig_go_1, _gostring_* _swig_go_2, long long *_swig_go_3) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t arg2 ;
  char **arg3 = (char **) 0 ;
  std::size_t *arg4 = (std::size_t *) 0 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = *(std::size_t **)&_swig_go_3; 
  
  {
    try {
      errno = 0;
      ((marisa_swig::Keyset const *)arg1)->keyStr(arg2,(char const **)arg3,arg4);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


long long _wrap_Keyset_keyId_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0, long long _swig_go_1) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t arg2 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Keyset const *)arg1)->keyId(arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Keyset_numKeys_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Keyset const *)arg1)->numKeys();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Keyset_empty_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (bool)((marisa_swig::Keyset const *)arg1)->empty();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Keyset_size_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Keyset const *)arg1)->size();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Keyset_totalLength_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Keyset const *)arg1)->totalLength();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Keyset_reset_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      (arg1)->reset();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Keyset_clear_marisa_2116d121546c47ae(marisa_swig::Keyset *_swig_go_0) {
  marisa_swig::Keyset *arg1 = (marisa_swig::Keyset *) 0 ;
  
  arg1 = *(marisa_swig::Keyset **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      (arg1)->clear();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


marisa_swig::Agent *_wrap_new_Agent_marisa_2116d121546c47ae() {
  marisa_swig::Agent *result = 0 ;
  marisa_swig::Agent *_swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Agent *)new marisa_swig::Agent();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Agent **)&_swig_go_result = (marisa_swig::Agent *)result; 
  return _swig_go_result;
}


void _wrap_delete_Agent_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      delete arg1;;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Agent_setQueryString_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0, _gostring_ _swig_go_1) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  
  {
    try {
      errno = 0;
      (arg1)->setQuery((char const *)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Agent_setQuery_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0, long long _swig_go_1) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  std::size_t arg2 ;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  {
    try {
      errno = 0;
      (arg1)->setQuery(arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


marisa_swig::Key *_wrap_Agent_key_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  marisa_swig::Key *result = 0 ;
  marisa_swig::Key *_swig_go_result;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Key *) &((marisa_swig::Agent const *)arg1)->key();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Key **)&_swig_go_result = result; 
  return _swig_go_result;
}


marisa_swig::Query *_wrap_Agent_query_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  marisa_swig::Query *result = 0 ;
  marisa_swig::Query *_swig_go_result;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Query *) &((marisa_swig::Agent const *)arg1)->query();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Query **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Agent_keyStr_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0, _gostring_* _swig_go_1, long long *_swig_go_2) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  char **arg2 = (char **) 0 ;
  std::size_t *arg3 = (std::size_t *) 0 ;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  arg3 = *(std::size_t **)&_swig_go_2; 
  
  {
    try {
      errno = 0;
      ((marisa_swig::Agent const *)arg1)->keyStr((char const **)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


long long _wrap_Agent_keyId_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Agent const *)arg1)->keyId();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Agent_queryStr_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0, _gostring_* _swig_go_1, long long *_swig_go_2) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  char **arg2 = (char **) 0 ;
  std::size_t *arg3 = (std::size_t *) 0 ;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  arg3 = *(std::size_t **)&_swig_go_2; 
  
  {
    try {
      errno = 0;
      ((marisa_swig::Agent const *)arg1)->queryStr((char const **)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


long long _wrap_Agent_queryId_marisa_2116d121546c47ae(marisa_swig::Agent *_swig_go_0) {
  marisa_swig::Agent *arg1 = (marisa_swig::Agent *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Agent **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Agent const *)arg1)->queryId();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


marisa_swig::Trie *_wrap_new_Trie_marisa_2116d121546c47ae() {
  marisa_swig::Trie *result = 0 ;
  marisa_swig::Trie *_swig_go_result;
  
  
  {
    try {
      errno = 0;
      result = (marisa_swig::Trie *)new marisa_swig::Trie();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  *(marisa_swig::Trie **)&_swig_go_result = (marisa_swig::Trie *)result; 
  return _swig_go_result;
}


void _wrap_delete_Trie_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      delete arg1;;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Trie_build__SWIG_0_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Keyset *_swig_go_1, intgo _swig_go_2) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Keyset *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Keyset **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  {
    try {
      errno = 0;
      (arg1)->build(*arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Trie_build__SWIG_1_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Keyset *_swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Keyset *arg2 = 0 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Keyset **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      (arg1)->build(*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Trie_mmap_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, _gostring_ _swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  
  {
    try {
      errno = 0;
      (arg1)->mmap((char const *)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Trie_load_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, _gostring_ _swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  
  {
    try {
      errno = 0;
      (arg1)->load((char const *)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


void _wrap_Trie_save_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, _gostring_ _swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  arg2 = (char *)_swig_go_1.p;
  arg3 = (size_t)_swig_go_1.n;
  
  
  {
    try {
      errno = 0;
      ((marisa_swig::Trie const *)arg1)->save((char const *)arg2,arg3);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


bool _wrap_Trie_lookup_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Agent *_swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Agent *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Agent **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      result = (bool)((marisa_swig::Trie const *)arg1)->lookup(*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Trie_reverseLookup_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Agent *_swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Agent *arg2 = 0 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Agent **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      ((marisa_swig::Trie const *)arg1)->reverseLookup(*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


bool _wrap_Trie_commonPrefixSearch_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Agent *_swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Agent *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Agent **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      result = (bool)((marisa_swig::Trie const *)arg1)->commonPrefixSearch(*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Trie_predictiveSearch_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0, marisa_swig::Agent *_swig_go_1) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::Agent *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  arg2 = *(marisa_swig::Agent **)&_swig_go_1; 
  
  {
    try {
      errno = 0;
      result = (bool)((marisa_swig::Trie const *)arg1)->predictiveSearch(*arg2);;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_numTries_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->numTries();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_numKeys_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->numKeys();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_numNodes_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->numNodes();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Trie_tailNode_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::TailMode result;
  intgo _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (marisa_swig::TailMode)((marisa_swig::Trie const *)arg1)->tailNode();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_Trie_nodeOrder_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  marisa_swig::NodeOrder result;
  intgo _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (marisa_swig::NodeOrder)((marisa_swig::Trie const *)arg1)->nodeOrder();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_Trie_empty_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = (bool)((marisa_swig::Trie const *)arg1)->empty();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_size_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->size();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_totalSize_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->totalSize();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Trie_ioSize_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  std::size_t result;
  long long _swig_go_result;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      result = ((marisa_swig::Trie const *)arg1)->ioSize();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Trie_clear_marisa_2116d121546c47ae(marisa_swig::Trie *_swig_go_0) {
  marisa_swig::Trie *arg1 = (marisa_swig::Trie *) 0 ;
  
  arg1 = *(marisa_swig::Trie **)&_swig_go_0; 
  
  {
    try {
      errno = 0;
      (arg1)->clear();;
    } catch (const marisa::Exception &ex) {
      printf("%s\n", strerror(errno));
      _swig_gopanic(ex.what());
    } catch (...) {
      _swig_gopanic("Unknown exception");
    }
  }
  
}


#ifdef __cplusplus
}
#endif

