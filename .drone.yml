name: kobodict
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.14-buster
  commands:
  - go test -cover -v ./kobodict
  - go test -cover -v ./kobodict/marisa
- name: bench
  image: golang:1.14-buster
  commands:
  - go test -bench=. -benchmem ./kobodict

trigger:
  event:
    exclude: [promote]

---

name: dictgen
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: test
  image: golang:1.14-buster
  commands:
  - go test -cover -v ./dictgen

trigger:
  event:
    exclude: [promote]

depends_on: [kobodict]

---

name: dictgen-cmd
kind: pipeline
type: docker

steps:
- name: build
  image: golang:1.14-buster
  commands:
  - go build -o dictgen-out ./cmd/dictgen
- name: run
  image: golang:1.14-buster
  commands:
  - ./dictgen-out --help

trigger:
  event:
    exclude: [promote]

depends_on: [dictgen]

---

name: dictutil-cmd
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.14-buster
  commands:
  - go build -o dictutil-out ./cmd/dictutil
- name: run
  image: golang:1.14-buster
  commands:
  - ./dictutil-out help

trigger:
  event:
    exclude: [promote]

depends_on: [kobodict]

---

name: marisa
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: generate
  image: golang:1.14-buster
  commands:
  - go generate ./marisa
  - git status --porcelain ./marisa/libmarisa.cc ./marisa/marisa.h
  - '[ ! -n "$(git status --porcelain ./marisa/libmarisa.cc ./marisa/marisa.h)" ] || { echo "Error: Generated files are not up to date, please run go generate and commit the result."; false; }'
- name: test
  image: golang:1.14-buster
  commands:
  - go test -v ./marisa
- name: build-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-main
  command: [
    "--platforms", "windows/386",
    "--build-cmd", "CGO_ENABLED=1 go build -x ./marisa",
  ]
  depends_on: [test]
- name: build-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-main
  command: [
    "--platforms", "linux/amd64",
    "--build-cmd", "CGO_ENABLED=1 go build -x ./marisa",
  ]
  depends_on: [test]
- name: build-linux-arm
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-arm
  command: [
    "--platforms", "linux/armv6",
    "--build-cmd", "CGO_ENABLED=1 go build -x ./marisa",
  ]
  depends_on: [test]
- name: build-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-darwin
  command: [
    "--platforms", "darwin/amd64",
    "--build-cmd", "CGO_ENABLED=1 go build -x ./marisa",
  ]
  depends_on: [test]

trigger:
  event:
    exclude: [promote]

---

name: gotdict-convert
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.14-buster
  commands:
  - apt-get update -qqy && apt-get install -qqy swig
  - go build -o gotdict-convert ./examples/gotdict-convert
- name: run
  image: golang:1.14-buster
  commands:
  - ./gotdict-convert --help
- name: convert
  image: golang:1.14-buster
  commands:
  - git clone https://github.com/wjdp/gotdict
  - git -C gotdict checkout 6b4d6cdbb1f5d899d418783ab842f487aafa79ec
  - ./gotdict-convert -o gotdict.df --images
  - ./gotdict-convert -o gotdict.noimg.df
  - ls -lah gotdict.df
- name: generate
  image: golang:1.14-buster
  commands:
  - apt-get update -qqy && apt-get install -qqy swig
  - go run ./cmd/dictgen -Ibase64 -o dicthtml-gt.zip gotdict.df
  - go run ./cmd/dictgen -Iremove -o dicthtml-gt.noimg.zip gotdict.noimg.df
  - ls -lah dicthtml-gt*.zip

trigger:
  event:
    exclude: [promote]

depends_on: [dictgen-cmd]

---

name: webster1913-convert
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.14-buster
  commands:
  - go build -o webster1913-convert ./examples/webster1913-convert
- name: run
  image: golang:1.14-buster
  commands:
  - ./webster1913-convert --help
- name: convert
  image: golang:1.14-buster
  commands:
  - wget -O webster1913.txt http://www.gutenberg.org/ebooks/29765.txt.utf-8
  - ./webster1913-convert -o webster1913.df webster1913.txt
  - ls -lah webster1913.df
- name: generate
  image: golang:1.14-buster
  commands:
  - go run ./cmd/dictgen -o dicthtml-wb.zip webster1913.df
  - ls -lah dicthtml-wb*.zip

trigger:
  event:
    exclude: [promote]

depends_on: [dictgen-cmd]

---

name: dictzip-decompile
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.14-buster
  commands:
  - go build -o dictzip-decompile ./examples/dictzip-decompile
- name: run
  image: golang:1.14-buster
  commands:
  - ./dictzip-decompile --help

trigger:
  event:
    exclude: [promote]

---

kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: notes
  image: golang:1.14-buster
  commands:
  - git fetch --tags
  - git log "$(git describe --tags --abbrev=0 HEAD~1)..HEAD" --oneline --format='%h %s' | tee -a notes.md
- name: build-linux-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-main
  command: [
    "--platforms", "linux/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictutil-linux-64bit ./cmd/dictutil &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictgen-linux-64bit ./cmd/dictgen &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/gotdict-convert-linux-64bit ./examples/gotdict-convert &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/webster1913-convert-linux-64bit ./examples/webster1913-convert &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictzip-decompile-linux-64bit ./examples/dictzip-decompile",
  ]
- name: build-linux-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-main
  command: [
    "--platforms", "linux/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictutil-linux-32bit ./cmd/dictutil &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictgen-linux-32bit ./cmd/dictgen &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/gotdict-convert-linux-32bit ./examples/gotdict-convert &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/webster1913-convert-linux-32bit ./examples/webster1913-convert &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictzip-decompile-linux-32bit ./examples/dictzip-decompile",
  ]
- name: build-linux-arm
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-arm
  command: [
    "--platforms", "linux/armv6",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictutil-linux-arm ./cmd/dictutil &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictgen-linux-arm ./cmd/dictgen &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/gotdict-convert-linux-arm ./examples/gotdict-convert &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/webster1913-convert-linux-arm ./examples/webster1913-convert &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictzip-decompile-linux-arm ./examples/dictzip-decompile",
  ]
- name: build-windows-386
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-main
  command: [
    "--platforms", "windows/386",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictutil-windows.exe ./cmd/dictutil &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictgen-windows.exe ./cmd/dictgen &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/gotdict-convert-windows.exe ./examples/gotdict-convert &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/webster1913-convert-windows.exe ./examples/webster1913-convert &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always) -extldflags -static\" -o build/dictzip-decompile-windows.exe ./examples/dictzip-decompile",
  ]
- name: build-darwin-amd64
  image: docker.elastic.co/beats-dev/golang-crossbuild:1.14.0-darwin
  command: [
    "--platforms", "darwin/amd64",
    "--build-cmd", "
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/dictutil-darwin-64bit ./cmd/dictutil &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/dictgen-darwin-64bit ./cmd/dictgen &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/gotdict-convert-darwin-64bit ./examples/gotdict-convert &&
      CGO_ENABLED=0 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/webster1913-convert-darwin-64bit ./examples/webster1913-convert &&
      CGO_ENABLED=1 go build -ldflags \"-s -w -linkmode external -X main.version=$(git describe --tags --always)\" -o build/dictzip-decompile-darwin-64bit ./examples/dictzip-decompile",
  ]
- name: list
  image: golang:1.14-buster
  commands:
  - ls -lah build
  depends_on: [build-linux-amd64, build-linux-arm, build-linux-386, build-windows-386, build-darwin-amd64]
- name: release
  image: plugins/github-release
  settings:
    api_key: {from_secret: GITHUB_TOKEN}
    title: ${DRONE_TAG}
    note: notes.md
    files: build/*
    draft: true
  when: {ref: {include: ["refs/tags/*"]}}
  depends_on: [notes, list]

trigger:
  event:
    exclude: [promote]

depends_on:
- kobodict
- dictgen
- dictgen-cmd
- dictutil-cmd
- marisa
- gotdict-convert
- webster1913-convert
